  ======================================
--=         Templatingsystem v1        =--
  ======================================
  
Das Templateformat ist eine gepackte Ordnerstruktur folgenden Aufbaus:

./
 |
 +- static   (Ordner fuer alle bilder)
 |   +- bild1.png
 |   +- bildX.png
 |   +- adsfadfasf.png
 |   +- adsfad.jpg
 |   +- site1.css
 |   +- [site1_minimap.png]
 |   +- [blubb.css]
 |   +- [warhgaarbl.css]
 |   +- [blubb_minimap.png]
 |   +- [warhgaarbl_minimap.png]
 +- site1.html
 +- site1_head.html
 +- [blubb.html]
 +- [blubb_head.html]
 +- [warhgaarbl.html]
 +- [warhgaarbl_head.html]
 +- general.css
 
Dateien im Archiv:

*.png/*.jpeg/*.jpg  --> Bilder fuer das Design (alle im ordner static)
*.html              --> Seitenlayouts
*_head.html         --> Dinge, die in den <head>-tag der seite muessen
*.css               --> Die Css-File, die Siterelevanten sachen formatiert. (static)
*_minimap.png       --> Die Minimap ist eine uebergangsloesung und optional:
                        Sie wird dazu verwendet, die Spaces einer Seite im 
                        Admininterface graphisch zu veranschaulichen.
                        Sie wird nur solange im Standard enthalten sein, bis
                        Skarphed das seitenlayout selbst umreissen (static)
general.css         --> Diese Datei enthaelt alle css-formatierungen, die in die
                        Serverweite CSS-Config eingetragen werden sollen.
 
Die Dateinamen sind beliebig. Hauptsache, Seiten befinden sich im root des
Archivs und bilder, seiten-css und minimaps in einem Ordner namens static .

!!ACHTUNG!!: Die CSS-Dateien muessen die namen ihrer zugehoerigen seiten tragen!
             Die CSS-Files uebernehmen die grundlegenden formatierungen ihrer
             jeweiligen Seiten.

---------------------------------------------------------------
 I. Angepeilter Arbeitsablauf bei der Teplateerstellung
---------------------------------------------------------------
 
  Der Arbeitsablauf bei der Templateerstellung soll so aussehen:
  
  1. Der Webdesigner entwirft ein layout und haelt sich bei der erstellung
     an die oben genannten richtlinien
  2. Der Webdesigner fuehrt ein Script/Programm auf den ordner aus, in dem die
     Templatedaten liegen. Dieses programm parst den Templateordner und legt
     die manifest.json an, die alle Metainformationen zum Template enthaelt
  3. a) Die Metadaten koennen direkt im Programm beschrieben werden
     b) Der Webdesigner kann die manifest.json manuell umschreiben
  4. a) Das Programm packt das fertige paket und benennt es nach dem Template-
        namen
     b) Der Webdesigner fuehrt das Programm mit einem Befehlszeilenparameter zum
        packen aus.
  
  --> Es entsteht ein fertiges .tar.gz-file, dass von skarphed gelsen werden
      kann.

---------------------------------------------------------------
 II. HTML-Dateien in Skarphed-Templates
---------------------------------------------------------------
  
  HTML-Seiten sind keine vollstaendigen HTML-Dokumente, sondern eher der Inhalt
  des Tags <body>
  
  Typischerweise besteht eine Skarphed-Seite aus einer hierarchischen Struktur
  von <div>-Tags, diese ist aber frei designbar.

  1. Containers for Widgets - Spaces
  
  Spaces have names (simple strings) to identify them to the skarphed user.
  A space is being designed by placing a custom tag into a containerelement e.g
  a <div>. Spaces have the type "space". An example space with the name "content"
  would look like this

  <div id="content">
    <% space:content %>
  </div>

  Please note that the id of the div or even the existence of the container-
  element is irrelevant to scoville. It was not in some prior versions.
  
  2. Extensible containers for Widgets - Boxes
  
  Another type of container is the box. boxes can stack multiple widgets.
  Boxes also have names. Boxes may be horizontally oriented (type "hbox")
  or vertically oriented (type "vbox"). They are being written similarly
  to Spaces:

  <div id="header">
    <% hbox:header %>
  </div>

  And a vertical version:

  <div id="sidebar">
    <% vbox:sidebar %>
  </div>

  Please note that the id of the div or even the existence of the container-
  element is irrelevant to scoville. It was not in some prior versions.
  
  3. Elemente fuer visuelle Gestaltung
  
  Fuer alle HTML-Elemente, die nicht in die Kategorien 1 und 2 fallen koennen
  zum zwecke der CSS-Formatierung (beschrieben in II) ebenfalls IDs vergeben
  werden. Diese IDs beginnen mit dem praefix template_ um nicht mit IDs irgend-
  welcher von Skarphed-Modulen erstellten HTML-Elementen zu kollidieren.
  
---------------------------------------------------------------
 II. Formatieren der Seiten mittels CSS
---------------------------------------------------------------
  
  Die in einer HTML-Datei definierten HTML-Konstrukte werden in einer gleich-
  namigen Cascading Stylesheet-file formatiert. 
  
  Diese Stylesheetdatei darf folgende Elemente Formatieren:
  
    - den <body>-tag
    - jedes Element, dass das eine ID traegt, die mit "template_" beginnt.
    - jede Box
  
  Es koennen bei der formatierung alle images aus dem img-Ordner verwendet wer-
  den.
  
---------------------------------------------------------------
 III. Die datei general.css
---------------------------------------------------------------

  Die general.css enthaelt Formatierungen fuer alle gaengigen HTML-Elemente.
  Die Datei wird beim Import in einen Skarphedserver geparst und ihre eintraege 
  als Serverweiter Standard verwendet.
  
  Beispiel:
  
    table {
      border: 1px solid silver;
    }
    
    -> Jede Tabelle auf einem Skarphedserver mit diesem Template wird einen
       hellgrauen Rahmen haben, sofern diese Einstellung nicht durch andere CSS-
       settings ueberschrieben wird.
    
---------------------------------------------------------------
 IV. Manifest.json
---------------------------------------------------------------

  Die Manifest.json ist in folgendem stil gehalten:
  
  {
    "name": "Skarphed Default Template",
    "description" : "Ein knallbuntes Template zu Debuggingzwecken",
    "author" : "Daniel 'zigapeda' Elstner",
    
    "pages":[
      {
        "name":"Hauptseite",
        "desc":"Die Hauptseite fuer den Content",
        "filename":"blubb.html",
        "default":true
      },
      {
        "name":"Spezialseite",
        "desc":"Diese Seite dient nur dazu, diesen einen Speziellen Conten dar-
                zustellen",
        "filename":"special.html"
      },
      {...}
    ],
    "filenames": ["blubb.html","img/bild1.jpg","img/bild2.jpg",...]
  }

